/*
 *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.
 *
 *
 *
 *
 *          +---------------------------------------------------------------------------------+
 *          |                                                                                 |
 *          |                                 Hello stranger!                                 |
 *          |                                                                                 |
 *          |                                                                                 |
 *          |   What you're currently looking at is the source code of a legally protected,   |
 *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |
 *          |               are forbidden and will result in legal consequences.              |
 *          |                                                                                 |
 *          |                                                                                 |
 *          +---------------------------------------------------------------------------------+
 *
 *
 *
 *
 */
'use strict';import Collection from'@ckeditor/ckeditor5-utils/src/collection';import{_SERVICE}from'./sessions';import _0x6da94 from'./../users/user';import WebSocketGateway from'./../websocketgateway/websocketgateway';import SessionsConnectResponse from'./responses/sessionsconnectresponse';import SessionsConnectMessage from'./messages/sessionsconnectmessage';import SocketConnectMessage from'./messages/socketconnectmessage';import SocketDisconnectMessage from'./messages/socketdisconnectmessage';import _0x52b4fa from'./../messagescompressor';class SessionCollection extends Collection{constructor(_0x526107,_0x29183c){super({'idProperty':'id'}),this['_id']=_0x526107,this['_serviceName']=_0x29183c,this['_queue']=[],this['_handlers']=new Map(),this['_wsGateway']=void 0x0,this['_channel']=void 0x0;}async['connect'](wsGateway){this['_wsGateway']=wsGateway,this['stopListening'](wsGateway,'change:state');const _0x3d0a61=new SessionsConnectMessage(this['_id'],this['_serviceName']);let sessionsConnectResponse;try{const _0x556d3f=await this['_wsGateway']['_sendRequest'](_SERVICE,SessionsConnectMessage['TYPE'],_0x52b4fa['encode'](_0x3d0a61));sessionsConnectResponse=_0x52b4fa['decode'](_0x556d3f,SessionsConnectResponse);}catch(_0x5e1bbd){sessionsConnectResponse=new SessionsConnectResponse(this['_id'],[]);}this['_connectToChannel'](this['_wsGateway'],sessionsConnectResponse['channel'],this['_serviceName']);const socekts=await async function(wsGateway,_0x5a5aef){const _0x509180=_0x5a5aef['map'](async socket=>{const item={'id':socket['id'],'role':socket['role']},_0x206857=socket['userId'];return item['user']=_0x206857?await _0x6da94['get'](wsGateway,_0x206857):new _0x6da94(),item;});return await Promise['all'](_0x509180);}(this['_wsGateway'],sessionsConnectResponse['sockets']);for(const _0x2d25e2 of socekts)super['add'](_0x2d25e2);this['_connected']=!0x0,this['fire']('connected'),this['listenTo'](this['_wsGateway'],'change:state',(..._0x40f5fe)=>this['_onWsGatewayStateChange'](..._0x40f5fe),{'priority':WebSocketGateway['_CHANGE_STATE_EVENT_PRIORITY']}),await this['_runQueue']();}['disconnect'](_0x1a995c=!0x0){if(this['_connected']){for(this['_connected']=!0x1,this['_queue']=[];this['length'];)super['remove'](0x0);this['_channel']&&(this['stopListening'](this['_channel']),this['_channel']=void 0x0),this['_wsGateway']&&_0x1a995c&&(this['stopListening'](this['_wsGateway']),this['_wsGateway']=void 0x0),this['fire']('disconnected'),_0x1a995c&&this['stopListening']();}}['_connectToChannel'](wsGateway,_0x274b6f,_0x2e299e){this['_channel']=wsGateway['_getChannel'](_0x2e299e,_0x274b6f),this['_addHandler'](this['_channel'],SocketConnectMessage['TYPE'],async(event,data)=>{const socketConnectMessage=_0x52b4fa['decode'](data,SocketConnectMessage);if(-0x1===this['getIndex'](socketConnectMessage['id'])){const socket={'id':socketConnectMessage['id'],'role':socketConnectMessage['role']};socketConnectMessage['userId']&&(socket['user']=await _0x6da94['get'](wsGateway,socketConnectMessage['userId'])),super['add'](socket);}}),this['_addHandler'](this['_channel'],SocketDisconnectMessage['TYPE'],async(event,data)=>{const socketDisconnectMessage=_0x52b4fa['decode'](data,SocketDisconnectMessage);-0x1!==this['getIndex'](socketDisconnectMessage['id'])&&super['remove'](socketDisconnectMessage['id']);});}async['_onWsGatewayStateChange'](event,property,_0x52eb01){_0x52eb01===WebSocketGateway['STATE_DISCONNECTED']&&this['disconnect'](!0x1),_0x52eb01===WebSocketGateway['STATE_CONNECTED']&&await this['connect'](this['_wsGateway']);}async['_runQueue'](){if(this['_isRunning']||!this['_connected'])return;let event;for(this['_isRunning']=!0x0;event=this['_queue']['shift']();){const eventName=event['event']['name'],_0x5e5a3a=this['_handlers']['get'](eventName);_0x5e5a3a&&await _0x5e5a3a(event['event'],event['data'],event['socketId']);}this['_isRunning']=!0x1;}['_addHandler'](_0x33cede,eventType,_0x426431){const eventName=_0x33cede['getEventName'](eventType,!0x0);this['listenTo'](_0x33cede,eventName,async(event,data,socketId)=>{this['_queue']['push']({'event':event,'data':data,'socketId':socketId}),await this['_runQueue']();}),this['_handlers']['set'](eventName,_0x426431);}}SessionCollection['prototype']['add']=void 0x0,SessionCollection['prototype']['remove']=void 0x0;export default SessionCollection;